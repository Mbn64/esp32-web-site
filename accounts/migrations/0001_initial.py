# Generated by Django 4.2.7 on 2025-09-14 15:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='ایمیل')),
                ('phone_number', models.CharField(blank=True, max_length=11, validators=[django.core.validators.RegexValidator('^09\\d{9}$', 'شماره موبایل معتبر وارد کنید')])),
                ('is_verified', models.BooleanField(default=False, verbose_name='تایید شده')),
                ('first_name_fa', models.CharField(blank=True, max_length=30, verbose_name='نام فارسی')),
                ('last_name_fa', models.CharField(blank=True, max_length=30, verbose_name='نام خانوادگی فارسی')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='درباره من')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='شهر')),
                ('country', models.CharField(default='Iran', max_length=50, verbose_name='کشور')),
                ('verification_code', models.CharField(blank=True, max_length=6, null=True)),
                ('verification_expires', models.DateTimeField(blank=True, null=True)),
                ('reset_code', models.CharField(blank=True, max_length=6, null=True)),
                ('reset_expires', models.DateTimeField(blank=True, null=True)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('two_factor_secret', models.CharField(blank=True, max_length=32)),
                ('backup_codes', models.JSONField(blank=True, default=list)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('locked_until', models.DateTimeField(blank=True, null=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(blank=True, max_length=100, verbose_name='شرکت')),
                ('job_title', models.CharField(blank=True, max_length=100, verbose_name='عنوان شغلی')),
                ('github_username', models.CharField(blank=True, max_length=50)),
                ('linkedin_url', models.URLField(blank=True)),
                ('newsletter_subscription', models.BooleanField(default=True, verbose_name='عضویت در خبرنامه')),
                ('marketing_emails', models.BooleanField(default=False, verbose_name='ایمیل\u200cهای تبلیغاتی')),
                ('show_email', models.BooleanField(default=False, verbose_name='نمایش ایمیل')),
                ('public_profile', models.BooleanField(default=True, verbose_name='پروفایل عمومی')),
                ('profile_views', models.IntegerField(default=0)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'پروفایل کاربر',
                'verbose_name_plural': 'پروفایل\u200cهای کاربران',
                'db_table': 'accounts_user_profile',
            },
        ),
        migrations.CreateModel(
            name='ESP32Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='نام دستگاه')),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('mac_address', models.CharField(max_length=17, unique=True, verbose_name='MAC Address')),
                ('chip_id', models.CharField(blank=True, max_length=50, verbose_name='Chip ID')),
                ('firmware_version', models.CharField(blank=True, max_length=20)),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='مکان')),
                ('status', models.CharField(choices=[('pending', 'در حال بررسی'), ('approved', 'تایید شده'), ('rejected', 'رد شده'), ('suspended', 'معلق شده')], default='pending', max_length=20)),
                ('is_online', models.BooleanField(default=False, verbose_name='آنلاین')),
                ('last_seen', models.DateTimeField(blank=True, null=True, verbose_name='آخرین اتصال')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('wifi_ssid', models.CharField(blank=True, max_length=32)),
                ('wifi_rssi', models.IntegerField(blank=True, null=True, verbose_name='قدرت سیگنال')),
                ('api_key', models.CharField(blank=True, max_length=64, unique=True)),
                ('api_secret', models.CharField(blank=True, max_length=128)),
                ('last_api_call', models.DateTimeField(blank=True, null=True)),
                ('api_call_count', models.IntegerField(default=0)),
                ('config', models.JSONField(blank=True, default=dict, verbose_name='تنظیمات')),
                ('features', models.JSONField(blank=True, default=list, verbose_name='ویژگی\u200cها')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_devices', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'دستگاه ESP32',
                'verbose_name_plural': 'دستگاه\u200cهای ESP32',
            },
        ),
        migrations.CreateModel(
            name='DeviceCommand',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('command_type', models.CharField(choices=[('reboot', 'راه\u200cاندازی مجدد'), ('update_config', 'بروزرسانی تنظیمات'), ('led_control', 'کنترل LED'), ('sensor_read', 'خواندن سنسور'), ('custom', 'دستور سفارشی')], max_length=20)),
                ('command_data', models.JSONField(blank=True, default=dict)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'در انتظار'), ('sent', 'ارسال شده'), ('executed', 'اجرا شده'), ('failed', 'ناموفق'), ('timeout', 'انقضای زمان')], default='pending', max_length=20)),
                ('priority', models.IntegerField(default=1)),
                ('response_data', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commands', to='accounts.esp32device')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_commands', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'دستور دستگاه',
                'verbose_name_plural': 'دستورات دستگاه',
                'db_table': 'accounts_device_command',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('password_change', 'تغییر رمز عبور'), ('email_change', 'تغییر ایمیل'), ('suspicious_login', 'ورود مشکوک'), ('account_locked', 'قفل حساب'), ('api_key_generated', 'تولید کلید API')], max_length=30)),
                ('risk_level', models.CharField(choices=[('low', 'کم'), ('medium', 'متوسط'), ('high', 'زیاد'), ('critical', 'بحرانی')], default='low', max_length=10)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('resolved', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'رویداد امنیتی',
                'verbose_name_plural': 'رویدادهای امنیتی',
                'db_table': 'accounts_security_event',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='accounts_se_user_id_c2328a_idx'), models.Index(fields=['event_type', 'timestamp'], name='accounts_se_event_t_ebd53a_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='esp32device',
            index=models.Index(fields=['user', 'status'], name='accounts_es_user_id_0237c6_idx'),
        ),
        migrations.AddIndex(
            model_name='esp32device',
            index=models.Index(fields=['status', 'is_online'], name='accounts_es_status_313261_idx'),
        ),
        migrations.AddIndex(
            model_name='esp32device',
            index=models.Index(fields=['last_seen'], name='accounts_es_last_se_d2430d_idx'),
        ),
        migrations.AddIndex(
            model_name='esp32device',
            index=models.Index(fields=['created_at'], name='accounts_es_created_a50a34_idx'),
        ),
        migrations.AddIndex(
            model_name='devicecommand',
            index=models.Index(fields=['device', 'status'], name='accounts_de_device__a26fa1_idx'),
        ),
        migrations.AddIndex(
            model_name='devicecommand',
            index=models.Index(fields=['status', 'created_at'], name='accounts_de_status_cc4c22_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email'], name='accounts_cu_email_5ce40b_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['is_verified'], name='accounts_cu_is_veri_c594de_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['username', 'email'], name='accounts_cu_usernam_0bba7b_idx'),
        ),
    ]
